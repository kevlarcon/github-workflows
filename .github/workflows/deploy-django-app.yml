name: Deploy Django Application

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      environment:
        required: true
        type: string
        default: 'prod'
      chart_version:
        required: false
        type: string
        default: 'latest'
      domain:
        required: true
        type: string
    secrets:
      KUBE_CONFIG_DATA:
        required: true
      DOCKER_REGISTRY_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/kevlarcon/${{ inputs.app_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > /tmp/kubeconfig
          export KUBECONFIG=/tmp/kubeconfig
          kubectl config current-context

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'

      - name: Add Helm repository
        run: |
          # For now, use local chart path - later will use OCI registry
          echo "Using infrastructure-catalog chart"

      - name: Deploy with Helm
        run: |
          export KUBECONFIG=/tmp/kubeconfig

          # Clone infrastructure-catalog to get the chart
          git clone https://github.com/kevlarcon/infrastructure-catalog.git /tmp/infrastructure-catalog

          helm upgrade --install ${{ inputs.app_name }} \
            /tmp/infrastructure-catalog/charts/django-app \
            --namespace ${{ inputs.app_name }} \
            --create-namespace \
            --set app.name=${{ inputs.app_name }} \
            --set app.namespace=${{ inputs.app_name }} \
            --set app.baseDomain=${{ inputs.domain }} \
            --set image.repository=ghcr.io/kevlarcon/${{ inputs.app_name }} \
            --set image.tag=${{ github.sha }} \
            --wait \
            --timeout 10m

      - name: Verify deployment
        run: |
          export KUBECONFIG=/tmp/kubeconfig
          kubectl rollout status deployment/${{ inputs.app_name }} -n ${{ inputs.app_name }} --timeout=300s
          kubectl get pods -n ${{ inputs.app_name }}

      - name: Get ingress info
        run: |
          export KUBECONFIG=/tmp/kubeconfig
          echo "üåê Application URLs:"
          kubectl get ingress -n ${{ inputs.app_name }} -o jsonpath='{range .items[*]}{.spec.rules[*].host}{"\n"}{end}' | sed 's/^/  https:\/\//'